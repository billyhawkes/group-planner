import{createClient as K}from"@libsql/client";import{drizzle as H}from"drizzle-orm/libsql";import{relations as p,eq as D}from"drizzle-orm";import{sqliteTable as u,text as o,integer as d,primaryKey as x}from"drizzle-orm/sqlite-core";import{DrizzleSQLiteAdapter as P}from"@lucia-auth/adapter-drizzle";import{Lucia as B,generateId as V}from"lucia";import{Google as Q,generateState as j,generateCodeVerifier as F}from"arctic";import{H3Event as b,getQuery as M,getRequestURL as W,sendRedirect as J,getCookie as X,setCookie as Y,eventHandler as Z}from"h3";import{getContext as ee}from"unctx";import{AsyncLocalStorage as te}from"node:async_hooks";import{z as f}from"zod";const s=u("users",{id:o("id").notNull().primaryKey(),email:o("email",{length:254}).unique().notNull(),googleId:o("google_id").unique().notNull(),name:o("name")}),oe=p(s,({one:e,many:t})=>({usersToGroups:t(l),messages:t(I),media:t(_),events:t(c),userToEvents:t(g)})),O=u("sessions",{id:o("id").notNull().primaryKey(),userId:o("user_id").notNull(),expiresAt:d("expires_at").notNull()}),l=u("users_to_groups",{userId:o("user_id").notNull(),groupId:o("group_id").notNull()},e=>({pk:x({columns:[e.userId,e.groupId]})})),se=p(l,({one:e,many:t})=>({user:e(s,{fields:[l.userId],references:[s.id]}),group:e(a,{fields:[l.groupId],references:[a.id]})})),a=u("groups",{id:o("id").notNull().primaryKey(),name:o("name").notNull()}),ne=p(a,({one:e,many:t})=>({usersToGroups:t(l)})),I=u("messages",{id:o("id").notNull().primaryKey(),userId:o("user_id").notNull(),groupId:o("group_id").notNull(),content:o("content").notNull(),createdAt:d("created_at",{mode:"timestamp"}).notNull(),updatedAt:d("updated_at",{mode:"timestamp"}).notNull()}),re=p(I,({one:e,many:t})=>({user:e(s,{fields:[I.userId],references:[s.id]})})),_=u("media",{id:o("id").notNull().primaryKey(),userId:o("user_id").notNull(),groupId:o("group_id").notNull(),type:o("type").notNull(),createdAt:d("created_at",{mode:"timestamp"}).notNull()}),ie=p(_,({one:e,many:t})=>({user:e(s,{fields:[_.userId],references:[s.id]}),group:e(a,{fields:[_.groupId],references:[a.id]})})),g=u("user_to_events",{userId:o("user_id").notNull(),eventId:o("event_id").notNull(),accepted:d("id",{mode:"boolean"})},e=>({pk:x({columns:[e.userId,e.eventId]})})),ae=p(g,({one:e,many:t})=>({user:e(s,{fields:[g.userId],references:[s.id]}),event:e(c,{fields:[g.eventId],references:[c.id]})})),c=u("events",{id:o("id").notNull().primaryKey(),groupId:o("group_id").notNull(),userId:o("user_id").notNull(),name:o("name").notNull(),description:o("description"),startsAt:d("starts_at",{mode:"timestamp"}).notNull(),endsAt:d("ends_at",{mode:"timestamp"}).notNull()}),ue=p(c,({one:e,many:t})=>({userToEvents:t(g),group:e(a,{fields:[c.groupId],references:[a.id]}),user:e(s,{fields:[c.userId],references:[s.id]})})),le=Object.freeze(Object.defineProperty({__proto__:null,events:c,eventsRelations:ue,groups:a,groupsRelations:ne,media:_,mediaRelations:ie,messages:I,messagesRelations:re,sessions:O,userToEvents:g,userToEventsRelations:ae,users:s,usersRelations:oe,usersToGroups:l,usersToGroupsRelations:se},Symbol.toStringTag,{value:"Module"})),G=()=>{const e=K({url:process.env.DATABASE_URL,authToken:process.env.DATABASE_TOKEN});return H(e,{schema:le})},ce=()=>{const e=G(),t=new P(e,O,s);return new B(t,{sessionCookie:{attributes:{secure:!0}}})};function de(){return _e()}const q=Symbol("$HTTPEvent");function pe(e){return typeof e=="object"&&(e instanceof b||e?.[q]instanceof b||e?.__is_event__===!0)}function h(e){return function(...t){let n=t[0];if(pe(n))t[0]=n instanceof b||n.__is_event__?n:n[q];else{if(!globalThis.app.config.server.experimental?.asyncContext)throw new Error("AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.");if(n=de(),!n)throw new Error("No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.");t.unshift(n)}return e(...t)}}const ge=h(M),me=h(W),S=h(J),A=h(X),v=h(Y);function fe(){return ee("nitro-app",{asyncContext:!!globalThis.app.config.server.experimental?.asyncContext,AsyncLocalStorage:te})}function _e(){return fe().use().event}const we=Z(async e=>{const t=me(e);console.log(`${process.env.SITE_URL}/auth/google/callback`),console.log(process.env.GOOGLE_CLIENT_ID,process.env.GOOGLE_CLIENT_SECRET);const n=new Q(process.env.GOOGLE_CLIENT_ID,process.env.GOOGLE_CLIENT_SECRET,`${process.env.SITE_URL}/auth/google/callback`),N=G(),y=ce();if(t.pathname==="/auth/signout"||t.pathname==="/auth/signout/"){const i=A(e,"auth_session");if(!i)return;const r=y.createBlankSessionCookie();v(e,r.name,r.value,r.attributes),await y.invalidateSession(i)}if(t.pathname==="/auth/google"||t.pathname==="/auth/google/"){const i=j(),r=F(),T=await n.createAuthorizationURL(i,r,{scopes:["profile","email"]});return v(e,"state",i,{secure:!0,path:"/",httpOnly:!0,maxAge:60*10}),v(e,"codeVerifier",r,{secure:!0,path:"/",httpOnly:!0,maxAge:60*10}),S(e,T.toString())}if(t.pathname==="/auth/google/callback"||t.pathname==="/auth/google/callback/"){const i=ge(e),r=f.string().parse(i.code),T=f.string().parse(i.state),k=A(e,"state"),R=A(e,"codeVerifier");if(!r||!k||!R||T!==k)throw new Error("Invalid request");const z=await n.validateAuthorizationCode(r,R),U=await(await fetch("https://openidconnect.googleapis.com/v1/userinfo",{headers:{Authorization:`Bearer ${z.accessToken}`}})).json(),{sub:E,email:w}=f.object({sub:f.string(),email:f.string()}).parse(U);let m;const L=await N.query.users.findFirst({where:D(s.googleId,E)});L?m=L.id:(m=V(15),await N.insert(s).values({id:m,email:w,googleId:E,name:"Anonymous"}),await N.insert(l).values({userId:m,groupId:"1"}));const $=await y.createSession(m,{email:w,googleId:E}),C=y.createSessionCookie($.id);return v(e,C.name,C.value,C.attributes),S(e,"/dashboard")}return{url:t.pathname}});export{we as default};
