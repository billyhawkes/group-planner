import{resolveResponse as h}from"@trpc/server/http";import{initTRPC as m}from"@trpc/server";import{H3Event as u,getRequestURL as y,setResponseStatus as g,getCookie as b,setHeader as R,getRequestWebStream as q,eventHandler as x}from"h3";import{getContext as C}from"unctx";import{AsyncLocalStorage as T}from"node:async_hooks";const S=async({sessionId:e})=>({}),i=m.create(),w=i.router,E=i.procedure,H=w({userList:E.query(async()=>[{id:1,name:"John Doe"}])});function _(e){let n;const t=c(e),r={duplex:"half",method:e.method,headers:e.headers};return e.node.req.body instanceof ArrayBuffer?new Request(t,{...r,body:e.node.req.body}):new Request(t,{...r,get body(){return n||(n=U(e),n)}})}function P(e){return e.web??={request:_(e),url:c(e)},e.web.request}function v(){return N()}const f=Symbol("$HTTPEvent");function A(e){return typeof e=="object"&&(e instanceof u||e?.[f]instanceof u||e?.__is_event__===!0)}function o(e){return function(...n){let t=n[0];if(A(t))n[0]=t instanceof u||t.__is_event__?t:t[f];else{if(!globalThis.app.config.server.experimental?.asyncContext)throw new Error("AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.");if(t=v(),!t)throw new Error("No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.");n.unshift(t)}return e(...n)}}const c=o(y),L=o(g),W=o(b),$=o(R),U=o(q),k=o(P);function I(){return C("nitro-app",{asyncContext:!!globalThis.app.config.server.experimental?.asyncContext,AsyncLocalStorage:T})}function N(){return I().use().event}const M=x(async e=>{const t=c(e).pathname.replace(/^\/trpc/,"").slice(1),r=k(e),p=W(e,"auth_session"),{status:l,headers:s,body:d}=await h({router:H,req:r,path:t,error:null,createContext:()=>S({sessionId:p})});return L(e,l),s&&Object.keys(s).forEach(a=>{s.get(a)&&$(e,a,s.get(a))}),d});export{M as default};
