/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppImport } from './routes/_app'
import { Route as IndexImport } from './routes/index'
import { Route as AppDashboardImport } from './routes/_app/dashboard'
import { Route as AppGroupIdLayoutImport } from './routes/_app/$groupId/_layout'
import { Route as AppGroupIdLayoutProfileImport } from './routes/_app/$groupId/_layout/profile'
import { Route as AppGroupIdLayoutMembersImport } from './routes/_app/$groupId/_layout/members'
import { Route as AppGroupIdLayoutMediaImport } from './routes/_app/$groupId/_layout/media'
import { Route as AppGroupIdLayoutJoinImport } from './routes/_app/$groupId/_layout/join'
import { Route as AppGroupIdLayoutEventsImport } from './routes/_app/$groupId/_layout/events'
import { Route as AppGroupIdLayoutChatImport } from './routes/_app/$groupId/_layout/chat'

// Create Virtual Routes

const AppGroupIdImport = createFileRoute('/_app/$groupId')()

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppGroupIdRoute = AppGroupIdImport.update({
  path: '/$groupId',
  getParentRoute: () => AppRoute,
} as any)

const AppDashboardRoute = AppDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => AppRoute,
} as any)

const AppGroupIdLayoutRoute = AppGroupIdLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AppGroupIdRoute,
} as any)

const AppGroupIdLayoutProfileRoute = AppGroupIdLayoutProfileImport.update({
  path: '/profile',
  getParentRoute: () => AppGroupIdLayoutRoute,
} as any)

const AppGroupIdLayoutMembersRoute = AppGroupIdLayoutMembersImport.update({
  path: '/members',
  getParentRoute: () => AppGroupIdLayoutRoute,
} as any)

const AppGroupIdLayoutMediaRoute = AppGroupIdLayoutMediaImport.update({
  path: '/media',
  getParentRoute: () => AppGroupIdLayoutRoute,
} as any)

const AppGroupIdLayoutJoinRoute = AppGroupIdLayoutJoinImport.update({
  path: '/join',
  getParentRoute: () => AppGroupIdLayoutRoute,
} as any)

const AppGroupIdLayoutEventsRoute = AppGroupIdLayoutEventsImport.update({
  path: '/events',
  getParentRoute: () => AppGroupIdLayoutRoute,
} as any)

const AppGroupIdLayoutChatRoute = AppGroupIdLayoutChatImport.update({
  path: '/chat',
  getParentRoute: () => AppGroupIdLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardImport
      parentRoute: typeof AppImport
    }
    '/_app/$groupId': {
      id: '/_app/$groupId'
      path: '/$groupId'
      fullPath: '/$groupId'
      preLoaderRoute: typeof AppGroupIdImport
      parentRoute: typeof AppImport
    }
    '/_app/$groupId/_layout': {
      id: '/_app/$groupId/_layout'
      path: '/$groupId'
      fullPath: '/$groupId'
      preLoaderRoute: typeof AppGroupIdLayoutImport
      parentRoute: typeof AppGroupIdRoute
    }
    '/_app/$groupId/_layout/chat': {
      id: '/_app/$groupId/_layout/chat'
      path: '/chat'
      fullPath: '/$groupId/chat'
      preLoaderRoute: typeof AppGroupIdLayoutChatImport
      parentRoute: typeof AppGroupIdLayoutImport
    }
    '/_app/$groupId/_layout/events': {
      id: '/_app/$groupId/_layout/events'
      path: '/events'
      fullPath: '/$groupId/events'
      preLoaderRoute: typeof AppGroupIdLayoutEventsImport
      parentRoute: typeof AppGroupIdLayoutImport
    }
    '/_app/$groupId/_layout/join': {
      id: '/_app/$groupId/_layout/join'
      path: '/join'
      fullPath: '/$groupId/join'
      preLoaderRoute: typeof AppGroupIdLayoutJoinImport
      parentRoute: typeof AppGroupIdLayoutImport
    }
    '/_app/$groupId/_layout/media': {
      id: '/_app/$groupId/_layout/media'
      path: '/media'
      fullPath: '/$groupId/media'
      preLoaderRoute: typeof AppGroupIdLayoutMediaImport
      parentRoute: typeof AppGroupIdLayoutImport
    }
    '/_app/$groupId/_layout/members': {
      id: '/_app/$groupId/_layout/members'
      path: '/members'
      fullPath: '/$groupId/members'
      preLoaderRoute: typeof AppGroupIdLayoutMembersImport
      parentRoute: typeof AppGroupIdLayoutImport
    }
    '/_app/$groupId/_layout/profile': {
      id: '/_app/$groupId/_layout/profile'
      path: '/profile'
      fullPath: '/$groupId/profile'
      preLoaderRoute: typeof AppGroupIdLayoutProfileImport
      parentRoute: typeof AppGroupIdLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AppRoute: AppRoute.addChildren({
    AppDashboardRoute,
    AppGroupIdRoute: AppGroupIdRoute.addChildren({
      AppGroupIdLayoutRoute: AppGroupIdLayoutRoute.addChildren({
        AppGroupIdLayoutChatRoute,
        AppGroupIdLayoutEventsRoute,
        AppGroupIdLayoutJoinRoute,
        AppGroupIdLayoutMediaRoute,
        AppGroupIdLayoutMembersRoute,
        AppGroupIdLayoutProfileRoute,
      }),
    }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/dashboard",
        "/_app/$groupId"
      ]
    },
    "/_app/dashboard": {
      "filePath": "_app/dashboard.tsx",
      "parent": "/_app"
    },
    "/_app/$groupId": {
      "filePath": "_app/$groupId",
      "parent": "/_app",
      "children": [
        "/_app/$groupId/_layout"
      ]
    },
    "/_app/$groupId/_layout": {
      "filePath": "_app/$groupId/_layout.tsx",
      "parent": "/_app/$groupId",
      "children": [
        "/_app/$groupId/_layout/chat",
        "/_app/$groupId/_layout/events",
        "/_app/$groupId/_layout/join",
        "/_app/$groupId/_layout/media",
        "/_app/$groupId/_layout/members",
        "/_app/$groupId/_layout/profile"
      ]
    },
    "/_app/$groupId/_layout/chat": {
      "filePath": "_app/$groupId/_layout/chat.tsx",
      "parent": "/_app/$groupId/_layout"
    },
    "/_app/$groupId/_layout/events": {
      "filePath": "_app/$groupId/_layout/events.tsx",
      "parent": "/_app/$groupId/_layout"
    },
    "/_app/$groupId/_layout/join": {
      "filePath": "_app/$groupId/_layout/join.tsx",
      "parent": "/_app/$groupId/_layout"
    },
    "/_app/$groupId/_layout/media": {
      "filePath": "_app/$groupId/_layout/media.tsx",
      "parent": "/_app/$groupId/_layout"
    },
    "/_app/$groupId/_layout/members": {
      "filePath": "_app/$groupId/_layout/members.tsx",
      "parent": "/_app/$groupId/_layout"
    },
    "/_app/$groupId/_layout/profile": {
      "filePath": "_app/$groupId/_layout/profile.tsx",
      "parent": "/_app/$groupId/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
